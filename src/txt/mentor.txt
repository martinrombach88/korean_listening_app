Me:

Okay maybe you're onto something with soundcloud.

I had a play around, and made something that can't be made generic using local files. It's good for what I've got, but I had to manually break the file up
to build what I have so far. 

If you go to Lesson.js, go ahead and replace dialogueList={list[0]} audioFile={0}/> with any numbers you like up to 70.
They all work. But I had to build the audio myself by ripping short files with Audacity.

I don't want to start pagination until the audio is working from timestamps. I might clean up the CSS though.

I think soundcloud API might be the best approach for making a generic solution, unless we can work out old school HTML timestamps using currentTime. 

I was hoping to do something like what's in this W3 schools link:

https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_av_prop_currenttime

It would be nice to reach a solution with it, but failing that, if soundcloud can do timestamps I can easily add them to the json + db and link them to the text display.

Either way, satisfying progress today. I've uploaded the project to Git if you want to download it.
https://github.com/martinrombach88/korean_listening_app 

I haven't deployed to github pages yet, so your best bet is to download the code.

If it's not working let me know and I'll zip it for Google Drive.

Mentor:

Hi
looking good!.
I had a look at the API and gave myself some React practice, 
The component allows call of  onListen every listenInterval
Used that to support a start/stop. Note the use of React hook {useRef} to find dom-element.

Would be easier to have Player of fixed size at right of text, since it is auto-slicing whole file.
Haven;t done that. Thi fix is good enough for now I think.

REVISED dialogue.js


import { useRef } from 'react';
import Typography from '@mui/material/Typography';
import Card from '@mui/material/Card';
import Grid from '@mui/material/Grid';
import AudioPlayer from 'react-h5-audio-player';
import 'react-h5-audio-player/lib/styles.css';

const Dialogue = ({dialogueList, audioFile}) => {
    let playMessage = `Now playing: ${dialogueList.lesson_name}.`
    console.log(playMessage);

    const playerRef = useRef();

    const onPlay = () => {
        if (playerRef.current.audio.current.currentTime < dialogueList.dialogue_start) {
        playerRef.current.audio.current.currentTime = dialogueList.dialogue_start;
        }
    }

    const onListen = () => {
        if (playerRef.current.audio.current.currentTime >= dialogueList.dialogue_stop) {
            // console.log(playerRef.current.audio.current.currentTime);
            playerRef.current.audio.current.currentTime = dialogueList.dialogue_start;
            playerRef.current.audio.current.pause();
        }
    }

    return (
            <Card sx = {{display:"flex", flexDirection:"column", p:2}}>

                <Grid sx = {{display:"flex", flexDirection:"column"}}>
                    <Typography sx={{ ml: 2, mr:2}}>
                        {dialogueList.speaker_hangeul}: {dialogueList.original_text}
                    </Typography>

                    <Typography sx={{ mb:2, ml:2, mr:2, fontSize:"12px"}}>
                        {dialogueList.speaker_roman}: {dialogueList.gt_text}
                    </Typography>

                    <Grid sx = {{ mt:2 }}>
                    <AudioPlayer
                            ref={playerRef}
                            showJumpControls={false}
                            src={require('../audio/int/'+dialogueList.mp3file)}
                            preload="auto"
                            listenInterval={10}
                            onPlay={()=> onPlay()}
                            onListen={() => onListen()}
                        />
                    </Grid>
                </Grid>
            </Card>
     );
}
 
export default Dialogue;

REVISED  lessonDialogue.json -> now need to fill in dialogue_start and dialogue_stop. Accurate to about 10ms.

{"course":"ttmik-iyagi-intermediate","lesson_number":"1","dialogue_index":"1","lesson_name":"Priority seats for the elderly","speaker_hangeul":"최경은 ","speaker_roman":"Kyung-eun Choi","original_text":" 안녕하세요. Talk To Me In Korean의 이야기 첫 번째 시간입니다. 안녕하세요. 최경은입니다. ","gt_text":" Hello. This is the first part of Talk To Me In Korean. Hello. This is Kyung-eun Choi. ","ne_text":null,"ke_text":null,"mp3file":"ttmik-iyagi-int-01.mp3","dialogue_start":"0.5","dialogue_stop":"17.3"},
{"course":"ttmik-iyagi-intermediate","lesson_number":"1","dialogue_index":"2","lesson_name":"Priority seats for the elderly","speaker_hangeul":"진석진 ","speaker_roman":"Seokjin Jin","original_text":" 네, 안녕하세요. 진석진입니다. ","gt_text":" Yes, hello. This is Seokjin Jin. ","ne_text":null,"ke_text":null,"mp3file":"ttmik-iyagi-int-01.mp3","dialogue_start":"17.4","dialogue_stop":"19.6"},
{"course":"ttmik-iyagi-intermediate","lesson_number":"1","dialogue_index":"3","lesson_name":"Priority seats for the elderly","speaker_hangeul":"최경은 ","speaker_roman":"Kyungeun Choi","original_text":" 네, 석진 씨? (네) 오늘 우리 뭐에 대해서 이야기 할까요? ","gt_text":" Yes, Mr. Seokjin? (Yes) What shall we talk about today? ","ne_text":null,"ke_text":null,"mp3file":"ttmik-iyagi-int-01.mp3","dialogue_start":"19.7","dialogue_stop":"24.7"},
